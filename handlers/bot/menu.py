from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

from aiogram_dialog import DialogManager

from keyboards.reply import main
from db_manager import DBManager

menu_router = Router()


@menu_router.message(Command("menu"))
async def command_menu(message: Message) -> None:
    text = f"""–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await message.answer(text, parse_mode="Markdown", reply_markup=main)

async def open_menu(message: Message) -> None:
    text = f"""–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await message.answer(text, parse_mode="Markdown", reply_markup=main)


@menu_router.message(F.text == "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìï", Command("homework"))
async def command_homework(message: Message, dialog_manager: DialogManager) -> None:
    db = DBManager()

    user_class_id = await db.user.get_user_class_id(message.from_user.id)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –∫–ª–∞—Å—Å–µ.
    if user_class_id is None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
        if await db.check.check_existence_of_class(user_class_id):
            pass
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
        else:
            await message.answer((
            "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ:\n"
            "–ù–∞–π—Ç–∏ –∫–ª–∞—Å—Å - /findclass\n"
            "–°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å - /createclass\n"
            "–°–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å - /createlocalclass\n"
        ))
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥.
    elif user_class_id < 0:
        pass
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞—Å—Å–µ.
    else:
        text = f"""–î–∑."""
        await message.answer(text, parse_mode="Markdown")

@menu_router.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—åüë§")
async def command_profile(message: Message) -> None:
    text = f"""–ü—Ä–æ—Ñ–∏–ª—å."""
    await message.answer(text, parse_mode="Markdown")

@menu_router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚Ñπ")
async def command_info(message: Message) -> None:
    text = f"""–≠—Ç–æ –±–æ—Ç –ª—É—á—à–∏–π –≤ –º–∏—Ä–µ. \n–ù–µ –±–∏—Ç, –Ω–µ –∫—Ä–∞—à–µ–Ω. \n–û—Ç –¥—É—à–∏ –æ—Ç—Ä—ã–≤–∞—é!"""
    await message.answer(text, parse_mode="Markdown")