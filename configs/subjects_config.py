class Subjects:
    # Constants with subjects and their grade levels
    SUBJECTS_AND_GRADES = {
        "Чистописание": (1, 1),
        "Чтение": (1, 4),
        "Труд": (1, 4),
        "Природоведение": (1, 5),
        "Математика": (1, 6),
        "Музыка": (1, 8),
        "ИЗО": (1, 11),
        "Разговоры о важном": (1, 11),
        "Русский язык": (1, 11),
        "Родной язык": (1, 11),
        "Родная литература": (1, 11),
        "Физкультура": (1, 11),
        "Классный час": (1, 11),
        "Иностранный язык": (4, 11),
        "История": (5, 11),
        "Литература": (5, 11),
        "ОБЖ": (5, 11),
        "Технология": (5, 11),
        "География": (6, 10),
        "Биология": (6, 11),
        "Информатика": (5, 11),
        "Обществознание": (6, 11),
        "Черчение": (8, 9),
        "Алгебра": (7, 11),
        "Геометрия": (7, 11),
        "Физика": (7, 11),
        "Химия": (8, 11),
        "Естествознание": (10, 11),
        "Основы экономики": (10, 11),
        "Правоведение": (10, 11),
        "Философия": (10, 11),
        "Экология": (10, 11),
        "Астрономия": (11, 11),
        "НВП": (11, 11),
    }

    SUBJECTS_NAMES = {
        "Чистописание": ["Чистописание", "Чистопис", "Чистоп", "Чисто"],
        "Чтение": ["Чтение", "Чтен", "Чт"],
        "Труд": ["Труд", "Труды"],
        "Природоведение": ["Природоведение", "Природоведен", "Природовед", "Природа", "Природ"],
        "Математика": ["Математика", "Матика", "Матека", "Матеша", "Мат"],
        "Музыка": ["Музыка", "Музык", "Муз"],
        "ИЗО": ["ИЗО"],
        "Русский язык": ["Русский язык", "Русский яз", "Русский", "Русс яз", "Рус яз", "Рус"],
        "Физкультура": ["Физкультура", "Физкульт", "Физ-ра", "Физра"],
        "Разговоры о важном": ["Разговоры о важном", "Разговоры о важ", "Разговоры", "Разг о важ", "Разг о важ", "Разг"],
        "Родной язык": ["Родной язык", "Родной яз", "Родной", "Родн яз", "Род яз", "Родн", "Род"],
        "Родная литература": ["Родная литература", "Родная литер", "Родная лит-ра", "Родная литра", "Родная лит",
                              "Родная", "Род литература", "Род литер", "Род лит-ра", "Род литра", "Род лит", "Род"],
        "Классный час": ["Классный час", "Классный ч", "Классный", "Классн час", "Классн ч", "Классн", 
                         "Клас час", "Клас ч", "Клас", "Кл час", "Кл ч", "Кл"],
        "Иностранный язык": ["Иностранный язык", "Иностранный яз", "Иностранный", "Ин язык", "Ин яз", "Ин", 
                             "Английский язык", "Английский яз", "Англ язык", "Анг язык", "Англ яз", "Анг яз", 
                             "Английский", "Англ", "Анг"],
        "История": ["История", "Истор", "Ист"],
        "Литература": ["Литература", "Литер", "Лит-ра", "Литра", "Лит"],
        "ОБЖ": ["ОБЖ"],
        "Технология": ["Технология", "Технолог", "Технол", "Техна", "Тех"],
        "География": ["География", "Географ", "Геогр", "Геог", "Гео"],
        "Биология": ["Биология", "Биолог", "Биол", "Био"],
        "Информатика": ["Информатика", "Информатик", "Информат", "Инфо", "Инфа"],
        "Обществознание": ["Обществознание", "Общество", "Общест", "Общага", "Общ"],
        "Черчение": ["Черчение", "Черчен", "Черче", "Черч", "Чёрт", "Черт"],
        "Алгебра": ["Алгебра", "Албера", "Бебра", "Алг", "Алг-ра", "Алгра"],
        "Геометрия": ["Геометрия", "Геометр", "Геомет", "Геом"],
        "Физика": ["Физика", "Физ"],
        "Химия": ["Химия", "Хим"],
        "Естествознание": ["Естествознание", "Естествозн", "Естество", "Естест", "Ест"],
        "Основы экономики": ["Основы экономики", "Основы эконом", "Основы эко", "Основы эк", "Осн экономики", "Осн эконом", "Осн эко", "Осн эк", "Основы", "Осн"],
        "Правоведение": ["Правоведение", "Правоведен", "Правовед", "Право", "Прав"],
        "Философия": ["Философия", "Фигософия", "Философ", "Филос", "Фил"],
        "Экология": ["Экология", "Эколог", "Экол", "Эко"],
        "Астрономия": ["Астрономия", "Астроном", "Астроно", "Астро", "Астр", "Аст"],
        "НВП": ["НВП"],
    }

    @classmethod
    async def get_subjects_for_grade(cls, grade: int) -> list[str]:
        subjects_for_grade: list[str] = []

        # Iterate through the subjects in the constant and check their grades
        for subject, (grade_from, grade_to) in cls.SUBJECTS_AND_GRADES.items():
            if grade >= grade_from and grade <= grade_to:
                subjects_for_grade.append(subject)

        return subjects_for_grade
    
    @classmethod
    async def get_subject_from_text(cls, text: str) -> str:
        """Возвращает все написанные предметы в тексте."""
        result = []

        for subject, subject_names in cls.SUBJECTS_NAMES.items():
            for subject_name in subject_names:
                if subject_name in text:
                    result.append(subject)
        
        all_subjects_in_text = list( set(result) )

        return all_subjects_in_text